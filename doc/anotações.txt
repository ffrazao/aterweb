25/01/2014 
- iniciado o projeto com:
	- Java: jre 7
	- Tomcat: 7.0.47
	- Eclipse: Kepler Service Release 1
		- Spring Tools Suite: 3.4.0.201310051539-RELEASE
			(Iniciado um projeto Spring/Spring Project)
		
- modificado o pom.xml para a versão do spring mvc 4.0.0.RELEASE e adicionado a 
dependência ao Tiles 3.0.3 (somente o tiles-servlet e o tiles-jsp)

- inserido o datasource do tomcat ver http://www.mkyong.com/tomcat/how-to-configure-mysql-datasource-in-tomcat-6/
- inserido o jpa/hibernate ver http://www.youtube.com/watch?v=XNJ4eLdfsQs

27/01/2014
- inserido o spring security versão 3.2.0.RELEASE 
ver tutorial http://docs.spring.io/spring-security/site/docs/3.2.1.CI-SNAPSHOT/reference/htmlsingle/ e
	tutorial http://www.mkyong.com/spring-security/spring-security-http-basic-authentication-example/

parei em 3.3. Java Configuration and Form Login

30/01/2014 
- ajustei o datasource ver http://www.alexecollins.com/content/tutorial-hibernate-jpa-spring-mvc-part-2/

03/02/2014 - coloquei os estagiários Jean e Adler para atuarem no projeto

10/02/2014 - necessário fazer
- ajustar a classe de autenticação customizada


11/02/2013 - construir o módulo de envio de arquivos (imagens/pdf/doc)

Sugestões
=> Grupos (Divisões Sociais)
=> Incluir a valoração da ATER
=> Incluir o menu de relatórios gerenciais

=> incluir no dashboard informações parecidas no site http://www.epagri.sc.gov.br/ menu indicadores Epagri


14/02/2014 = avaliação das necessidades do projeto
	O Adler está até hoje tentando padronizar os formulários construíndo e ajustando o cadastro de usuários.
		preciso que este trabalho seja concluído o mais rápido possível.
		=> Posso analisar este código para organizá-lo e otimizá-lo.
	O Jean está formatando a tela de Propriedades e de Pessoas, ainda não conseguiu avançar para a edição dos dados. Somente a listagem do cadastro de pessoas já tem alguns itens funcionando, é necessário configurar o mapeamento da Pessoa, pois está enviando muita informaçao devido às várias interconexões entre as tabelas. 
		=> Preciso ajustar o mapa de relacionamentos da entidade PesPessoa para que esta funcionalidade possa evoluir.
	A configuração do Spring MVC está no formato antigo (via xml). Preciso estudar para padronizar tudo via codificação Java
	
	Adicionar o recurso Remember-Me para a gestão da autorização de acesso pela senha do usuário (ver material na net)
	Adicionar a proteção de ataques CSRF que evita as telas confidenciais navegadas possam ser acessadas depois de um logout.
	Ajustar a utilização dos recursos estáticos do spring (ver em )
	
23/02/104 = Consegui encontrar o site http://keenformatics.blogspot.com.br/2013/08/how-to-solve-json-infinite-recursion.html
que dá dicas para como tratar o problema do Json com auto relacionamento. Tem que tomar cuidado quando é necessário referenciar mais de uma vez o mesmo 
objeto dentro da mesma Collection (ver no documento melhores explicações)

04/03/2014 - Detectamos que o JSON não está informando o tipo do objeto corretamente para a classe Pessoa e suas dependentes PessoaFisica e Pessoa Juridica. Ao fazer a análise detectei o método:
org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.resolveName(String name, MethodParameter parameter, NativeWebRequest webRequest) throws Exception

Este metodo é o responsavel por montar a chamada ao método que vai responder à requisição. Fazer melhor estudo dele depois para a chamada do método salvar da classe Pessoa.

05/03/2014 - Descobri que isso é um comportamento normal do Jackson e não um erro, ou seja, quando o item é listado não aparece o tipo no primeiro nível, só em suas dependências em diante.

05/03/2014 - Estudo para coletar mais informações da tela de login, além do nome do usuário e senha. Inicialmente captar o flag de acesso como administrador e depois verificar se é interessante também incluir o campo com o módulo do sistema que o usuário deseja acessar.
Encontrei o site: http://mrather.blogspot.com.br/2010/02/extending-usernamepasswordauthenticatio.html que explicou como inserir novos campos na tela de login.


INSERIR CUSTO DE PRODUÇAO DENTRO DO CONTEXTO DOS INDICES DE PRODUÇÃO

10/03/2014 - Problemas com o desserializador do JSON. O cadastro de pessoa está enviando e o servidor está ignorando as classes polimórficas, ou seja, sempre tenta transformar na classe mais genérica em ves da mais especializada.

12/03/2014 - Descobri que é necessário anotar o parâmetro de entrada método receptor da chamada no controller com @RequestBody (para envios via POST) e @RequestParam (para envios via GET). Fiz a modificação. No primeiro teste o envio acusou erro http 415. Suspeitamos que os campos enviados não estejam corretos. O Jean vai iniciar os testes/ajustes.



analisar o método com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer(DeserializationContext, DeserializerFactory, JavaType)

com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.createBeanDeserializer(DeserializationContext, JavaType, BeanDescription)

13/03/2014 - Detectado que o nome Login está incoerente. O nome correto é usuario. => modificar no banco e no sistema

14/03/2014 - Identificado possivel defeito na construção dos getters e setters do modelo. Foi necessario refazer todos. Aproveitei um exemplo de metodos add e remove side-by-side para ter como exemplo futuro.

	public PublicoAlvoLocalizacao addPublicoAlvoLocalizacao(
			PublicoAlvoLocalizacao publicoAlvoLocalizacao) {
		getPublicoAlvoLocalizacaos().add(publicoAlvoLocalizacao);
		publicoAlvoLocalizacao.setPublicoAlvo(this);

		return publicoAlvoLocalizacao;
	}

	public PublicoAlvoLocalizacao removePublicoAlvoLocalizacao(
			PublicoAlvoLocalizacao publicoAlvoLocalizacao) {
		getPublicoAlvoLocalizacaos().remove(publicoAlvoLocalizacao);
		publicoAlvoLocalizacao.setPublicoAlvo(null);

		return publicoAlvoLocalizacao;
	}

19/03/2014 - Fazer:
- método Pessoa.salvar. 
- filtro de propriedades. 
- restaurar propriedades.
- Continuar a programação da tela de grupo de pessoas.

21/03/2014 - 
Pedi ao Adler 
	Terminar o cadastro de propriedades
	Pensar no gerenciador de upload de arquivos
	Descobrir como fazer para captar dados da sessão via ajax();
	
24/03/2014 - Campos do tipo Float estão com problemas, procurar como o spring mvc trata esses tipos de campos (feito)
           - A Classe exploração não deve ser extensão de PessoaMeioContato. Transformar em relacionamento OneToOne (feito)

02/04/2014 - Adler trabalhando com o banco de imagens (inicialmente pelo cadastro de propriedades)

04/04/2014 - Jean atuou na modelagen do módulo de relacionamento das pessoas    

06/04/2014 - Comprei e repassei aos meninos um livro de angularjs

06/04/2014 - Consertei a conversao da string para number, bigdecimal, float ou double. Criei a capacidade de gerar thumbnail

08/04/2014 - // TODO Os Json des/serializer Calendar estao mal feitos - Refazer. (feito) 
             testar 
             	salvar relacionamento de pessoas (feito, falta testar)
             	salvar propriedade (feito, falta testar)

09/04/2014 - Reunião na FAPE sobre o cadastro. Incluir o campo CFDF (Cadastro Fiscal do Distrito Federal) no cadastro aLém da Caixa Postal do endereço
